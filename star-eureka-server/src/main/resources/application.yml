spring: 
  application: 
    name: eureka-server

---

spring: 
  ###指定profile=peer1
  profiles: peer1
###在默认设置下，该服务注册中心也会将自己作为客户端来尝试注册它自己，所以我们需要禁用它的客户端注册行为
server:
  port: 1314
eureka:
  instance: 
    # 指定当profile=peer1时，主机名是peer1
    hostname: peer1
  client: 
    #registerWithEureka: false
    #fetchRegistry: false
    serviceUrl:
      # 将自己注册到peer2这个Eureka Server上面
      defaultZone: http://william:123456@peer2:1315/eureka/
      
###为我们的Eureka服务注册和发现中心添加用户认证
###添加之后，对应的所有服务提供者和服务消费者，访问的eureka地址都需要做出对应的变更，如：http://william:123456@127.0.0.1:1314/eureka/
security: 
  basic: 
    enabled: true
  user: 
    name: william
    password: 123456
      
---

spring: 
  ###指定profile=peer2
  profiles: peer2
###在默认设置下，该服务注册中心也会将自己作为客户端来尝试注册它自己，所以我们需要禁用它的客户端注册行为
server:
  port: 1315
eureka:
  instance: 
    # 指定当profile=peer2时，主机名是peer2
    hostname: peer2
  client: 
    #registerWithEureka: false
    #fetchRegistry: false
    serviceUrl:
      # 将自己注册到peer2这个Eureka Server上面
      defaultZone: http://william:123456@peer1:1314/eureka/
      
security: 
  basic: 
    enabled: true
  user: 
    name: william
    password: 123456